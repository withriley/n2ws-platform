{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "VPC",
      "Action": [
        "cloudformation:ValidateTemplate",
        "cloudformation:CreateStack",
        "cloudformation:DeleteStack",
        "cloudformation:DescribeStacks",
        "cloudformation:DescribeStackEvents",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeRouteTables",
        "ec2:DescribeVpnGateways",
        "ec2:CreateVpc",
        "ec2:CreateDhcpOptions",
        "ec2:ModifyVpcAttribute",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSubnet",
        "ec2:CreateNetworkAcl",
        "ec2:CreateRouteTable",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AssociateDhcpOptions",
        "ec2:CreateNetworkAclEntry",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:ModifySubnetAttribute",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:CreateInternetGateway",
        "ec2:AttachInternetGateway",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:AssociateRouteTable",
        "ec2:CreateRoute",
        "ec2:CreateVpnGateway",
        "ec2:AttachVpnGateway",
        "ec2:EnableVgwRoutePropagation",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:ListAllMyBuckets",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeTransitGatewayConnects",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGateway",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:CreateCustomerGateway",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVpnConnection",
        "ec2:CreateTransitGatewayConnect",
        "ec2:DescribeTransitGatewayConnectPeers",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:GetTransitGatewayPrefixListReferences",
        "ec2:CreateVpnConnectionRoute",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:CreateNetworkInterface",
        "ec2:DescribeNatGateways",
        "ec2:CreateNatGateway",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:CreateVpcPeeringConnection",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:EnableTransitGatewayRouteTablePropagation"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "CopyToS3",
      "Action": [
        "s3:ReplicateObject",
        "s3:ListAllMyBuckets",
        "s3:AbortMultipartUpload",
        "s3:ListBucket",
        "s3:ListMultipartUploadParts",
        "s3:GetBucketLocation",
        "s3:GetBucketVersioning",
        "s3:ListBucketVersions",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetEncryptionConfiguration",
        "s3:PutObject*",
        "s3:GetObject*",
        "s3:DeleteObject*",
        "kms:GenerateDataKey",
        "kms:Decrypt",
        "ebs:ListChangedBlocks",
        "ebs:ListSnapshotBlocks",
        "ebs:GetSnapshotBlock",
        "rds:StartExportTask",
        "rds:DescribeExportTasks",
        "rds:CancelExportTask",
        "rds:ModifyDBInstance",
        "rds-db:connect"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "Archive",
      "Action": [
        "s3:RestoreObject"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "CPMWorkerTermination",
      "Action": "ec2:TerminateInstances",
      "Resource": [
        "*"
      ],
      "Effect": "Allow",
      "Condition": {
        "StringEquals": {
          "ec2:ResourceTag/Name": "CPMWorkerMachine"
        }
      }
    },
    {
      "Sid": "ResourceControl",
      "Action": [
        "ec2:StartInstances",
        "ec2:StopInstances",
        "rds:StartDBInstance",
        "rds:StopDBInstance"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "EFS",
      "Action": [
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeTags",
        "elasticfilesystem:CreateTags",
        "elasticfilesystem:DescribeLifecycleConfiguration",
        "elasticfilesystem:PutLifecycleConfiguration",
        "elasticfilesystem:UpdateFileSystem",
        "elasticfilesystem:PutBackupPolicy",
        "backup:StartBackupJob",
        "backup:DescribeBackupJob",
        "backup:ListBackupJobs",
        "backup:ListBackupVaults",
        "backup:GetRecoveryPointRestoreMetadata",
        "backup:ListTags",
        "backup:StartRestoreJob",
        "backup:DescribeRestoreJob",
        "backup:ListRestoreJobs",
        "backup:DeleteRecoveryPoint",
        "backup:DescribeRecoveryPoint",
        "backup:UpdateRecoveryPointLifecycle",
        "backup:StartCopyJob",
        "backup:DescribeCopyJob",
        "iam:ListRoles"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "CostExplorer",
      "Action": [
        "pricing:GetProducts",
        "ec2:GetConsoleOutput",
        "ce:GetCostAndUsage"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "SupportedServiceRegions",
      "Action": [
        "ssm:GetParametersByPath"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "S3Sync",
      "Action": [
        "s3:DeleteObject",
        "s3:GetBucketLocation",
        "s3:GetObject",
        "s3:GetObjectTagging",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectTagging"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "FSX",
      "Action": [
        "ds:DescribeDirectories",
        "fsx:CreateBackup",
        "fsx:CreateFileSystem",
        "fsx:CreateFileSystemFromBackup",
        "fsx:CreateStorageVirtualMachine",
        "fsx:CreateVolumeFromBackup",
        "fsx:DeleteBackup",
        "fsx:DescribeBackups",
        "fsx:DescribeFileSystems",
        "fsx:DescribeStorageVirtualMachines",
        "fsx:DescribeVolumes",
        "fsx:ListTagsForResource",
        "fsx:TagResource"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "CBT",
      "Action": [
        "ebs:ListChangedBlocks",
        "ebs:ListSnapshotBlocks"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "FLR",
      "Action": [
        "ebs:ListSnapshotBlocks",
        "ebs:GetSnapshotBlock"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    },
    {
      "Sid": "SapHanaDB",
      "Action": [
        "ssm:PutParameter",
        "ssm:GetParameter",
        "ssm:DeleteParameter"
      ],
      "Resource": [
        "*"
      ],
      "Effect": "Allow"
    }
  ]
}
